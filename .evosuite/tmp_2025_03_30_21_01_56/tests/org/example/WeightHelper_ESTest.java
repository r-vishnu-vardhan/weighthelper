/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 30 19:02:34 GMT 2025
 */

package org.example;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.WeightHelper;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WeightHelper_ESTest extends WeightHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = WeightHelper.getBMICategory(1.0, 1.0);
      assertEquals("Obese", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI(0.0, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Height must be > 0 and weight >= 0
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = WeightHelper.calculateBMI(18.5, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.getBMICategory(1488.0658, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Height must be > 0 and weight >= 0
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.getBMICategory(1.9E-9, 1.1342874699270746E7);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // BigInteger divide by zero
         //
         verifyException("java.math.MutableBigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI(5.0E-10, 5.0E-10);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // BigInteger divide by zero
         //
         verifyException("java.math.MutableBigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = WeightHelper.calculateBMI(1.0, 1.0);
      assertEquals(10000.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = WeightHelper.getBMICategory(400.0, 400.0);
      assertEquals("Overweight", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = WeightHelper.getBMICategory(540.5405405405, 540.5405405405);
      assertEquals("Normal weight", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = WeightHelper.getBMICategory(250000.0, 10000.0);
      assertEquals("Underweight", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI(1.0, (-1.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Height must be > 0 and weight >= 0
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = WeightHelper.getBMICategory(333.3333333267, 333.3333333267);
      assertEquals("Obese", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        WeightHelper.calculateBMI((-249.8112097869247), (-249.8112097869247));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Height must be > 0 and weight >= 0
         //
         verifyException("org.example.WeightHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WeightHelper weightHelper0 = new WeightHelper();
  }
}
